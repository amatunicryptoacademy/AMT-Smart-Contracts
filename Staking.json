{
  "address": "0x87Ce1214CeAda403408219Fe35B02e2C0D73F4a2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token_",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Unstaked",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BLOCKS_PER_YEAR",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "addPrizeFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "availablePrizeFund",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount_",
          "type": "uint256"
        }
      ],
      "name": "stakeOnBehalf",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "stakeIndex_",
          "type": "uint256"
        }
      ],
      "name": "unstake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user_",
          "type": "address"
        }
      ],
      "name": "userStakes",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "startBlock",
              "type": "uint256"
            }
          ],
          "internalType": "struct Staking.UserInfo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x753bfdb03b4eabe42674b05108a33de55499b072400fbfcbf53ec79bff0a9265",
  "receipt": {
    "to": null,
    "from": "0xb2444FE0E53378E094736834067c1E2653ec3CAB",
    "contractAddress": "0x87Ce1214CeAda403408219Fe35B02e2C0D73F4a2",
    "transactionIndex": 3,
    "gasUsed": "839144",
    "logsBloom": "0x
    "blockHash": "0x7a8e8a206cd239e46e91dcc24aa76ab6a8381c0b5a728b88e637fc9b285fd02c",
    "transactionHash": "0x753bfdb03b4eabe42674b05108a33de55499b072400fbfcbf53ec79bff0a9265",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 27256429,
        "transactionHash": "0x753bfdb03b4eabe42674b05108a33de55499b072400fbfcbf53ec79bff0a9265",
        "address": "0x87Ce1214CeAda403408219Fe35B02e2C0D73F4a2",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000b2444fe0e53378e094736834067c1e2653ec3cab"
        ],
        "data": "0x",
        "logIndex": 5,
        "blockHash": "0x7a8e8a206cd239e46e91dcc24aa76ab6a8381c0b5a728b88e637fc9b285fd02c"
      }
    ],
    "blockNumber": 27256429,
    "cumulativeGasUsed": "1014715",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd130E6c157EbcEcc619Cde6D8919b1F3b993e1c0"
  ],
  "numDeployments": 8,
  "solcInputHash": "35a94a38e011014a43b07a20df21e996",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Unstaked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BLOCKS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addPrizeFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"availablePrizeFund\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount_\",\"type\":\"uint256\"}],\"name\":\"stakeOnBehalf\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex_\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user_\",\"type\":\"address\"}],\"name\":\"userStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"}],\"internalType\":\"struct Staking.UserInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{\":__CACHE_BREAKER__\":\"0x00000000d41867734bbee4c6863d9255b2b06ac1\"},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Staking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.12;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n\\ncontract Staking is Ownable {\\n    IERC20 public token;\\n    struct UserInfo {\\n        uint256 amount;\\n        uint256 startBlock;\\n    }\\n    uint256 public availablePrizeFund;\\n    uint256 public constant BLOCKS_PER_YEAR = 100;\\n    mapping(address => UserInfo[]) public userInfo;\\n\\n    // Events\\n    event Staked(address indexed user, uint256 amount, uint256 startBlock);\\n    event Unstaked(address indexed user, uint256 amount);\\n\\n    constructor(IERC20 token_) {\\n        require(address(token_) != address(0), \\\"Token address can't be address zero\\\");\\n        token = token_;\\n    }\\n\\n    function addPrizeFund(uint256 amount) external onlyOwner {\\n        availablePrizeFund += amount;\\n        token.transferFrom(msg.sender, address(this), amount);\\n    }\\n\\n    function stake(uint256 amount_) external {\\n        require(availablePrizeFund > (amount_ * 1200) / 10000, \\\"Staking: Insufficient Prize fund\\\");\\n        userInfo[msg.sender].push(UserInfo({amount: amount_, startBlock: block.number}));\\n        availablePrizeFund -= (amount_ * 1200) / 10000;\\n        token.transferFrom(msg.sender, address(this), amount_);\\n        emit Staked(msg.sender, amount_, block.number);\\n    }\\n\\n    function stakeOnBehalf(address user_, uint256 amount_) external onlyOwner {\\n        require(availablePrizeFund > (amount_ * 1200) / 10000, \\\"Staking: Insufficient Prize fund\\\");\\n        require(user_ != address(0), \\\"Staking: User address can't be zero\\\");\\n        userInfo[user_].push(UserInfo({amount: amount_, startBlock: block.number}));\\n        availablePrizeFund -= (amount_ * 1200) / 10000;\\n        token.transferFrom(msg.sender, address(this), amount_);\\n        emit Staked(user_, amount_, block.number);\\n    }\\n\\n    function unstake(uint256 stakeIndex_) external {\\n        require(userInfo[msg.sender][stakeIndex_].amount > 0, \\\"Staking: Nothing to unstake\\\");\\n        require(\\n            userInfo[msg.sender][stakeIndex_].startBlock + BLOCKS_PER_YEAR * 3 <= block.number,\\n            \\\"Staking: Locked period didn't passed\\\"\\n        );\\n        uint256 amount = userInfo[msg.sender][stakeIndex_].amount;\\n        delete userInfo[msg.sender][stakeIndex_];\\n        token.transfer(msg.sender, amount + (amount * 1200) / 10000);\\n        emit Unstaked(msg.sender, amount + (amount * 1200) / 10000);\\n    }\\n\\n    function withdraw() external onlyOwner {\\n        uint256 amount = availablePrizeFund;\\n        availablePrizeFund = 0;\\n        token.transfer(msg.sender, amount);\\n    }\\n\\n    function userStakes(address user_) public view returns (UserInfo[] memory){\\n        return userInfo[user_];\\n    }\\n}\\n\",\"keccak256\":\"0xa5ad586255da4fba5b83421fa645dc74f6973c33c564c15d4999be8ad5878dc7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ea8380380610ea883398101604081905261002f91610113565b610038336100c3565b6001600160a01b03811661009e5760405162461bcd60e51b815260206004820152602360248201527f546f6b656e20616464726573732063616e27742062652061646472657373207a60448201526265726f60e81b606482015260840160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055610143565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561012557600080fd5b81516001600160a01b038116811461013c57600080fd5b9392505050565b610d56806101526000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063c07092d511610066578063c07092d5146101a4578063d37db1d2146101bb578063f2fde38b146101c3578063fc0c546a146101d657600080fd5b80638da5cb5b1461014c5780638da7ad2314610171578063a694fc3a1461019157600080fd5b80631d9ca881146100d457806321ce919d146100e95780632e17de78146101165780633ccfd60b14610129578063460b5ee214610131578063715018a614610144575b600080fd5b6100e76100e2366004610b5d565b6101e9565b005b6100fc6100f7366004610b92565b6102b3565b604080519283526020830191909152015b60405180910390f35b6100e7610124366004610b5d565b6102ef565b6100e7610583565b6100e761013f366004610b92565b6105ed565b6100e761081c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010d565b61018461017f366004610bbc565b610852565b60405161010d9190610bde565b6100e761019f366004610b5d565b6108db565b6101ad60025481565b60405190815260200161010d565b6101ad606481565b6100e76101d1366004610bbc565b610a72565b600154610159906001600160a01b031681565b6000546001600160a01b0316331461021c5760405162461bcd60e51b815260040161021390610c2d565b60405180910390fd5b806002600082825461022e9190610c78565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064015b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610c90565b5050565b600360205281600052604060002081815481106102cf57600080fd5b600091825260209091206002909102018054600190910154909250905082565b33600090815260036020526040812080548390811061031057610310610cb2565b9060005260206000209060020201600001541161036f5760405162461bcd60e51b815260206004820152601b60248201527f5374616b696e673a204e6f7468696e6720746f20756e7374616b6500000000006044820152606401610213565b4361037c60646003610cc8565b33600090815260036020526040902080548490811061039d5761039d610cb2565b9060005260206000209060020201600101546103b99190610c78565b11156104135760405162461bcd60e51b8152602060048201526024808201527f5374616b696e673a204c6f636b656420706572696f64206469646e27742070616044820152631cdcd95960e21b6064820152608401610213565b33600090815260036020526040812080548390811061043457610434610cb2565b60009182526020808320600290920290910154338352600390915260409091208054919250908390811061046a5761046a610cb2565b600091825260208220600290910201818155600190810191909155546001600160a01b031663a9059cbb336127106104a4856104b0610cc8565b6104ae9190610ce7565b6104b89085610c78565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190610c90565b50337f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75612710610559846104b0610cc8565b6105639190610ce7565b61056d9084610c78565b6040519081526020015b60405180910390a25050565b6000546001600160a01b031633146105ad5760405162461bcd60e51b815260040161021390610c2d565b60028054600090915560015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb9060440161026c565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161021390610c2d565b612710610626826104b0610cc8565b6106309190610ce7565b600254116106805760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20496e73756666696369656e74205072697a652066756e646044820152606401610213565b6001600160a01b0382166106e25760405162461bcd60e51b815260206004820152602360248201527f5374616b696e673a205573657220616464726573732063616e2774206265207a60448201526265726f60e81b6064820152608401610213565b6001600160a01b038216600090815260036020908152604080832081518083019092528482524382840190815281546001818101845592865293909420915160029093029091019182559151910155612710610740826104b0610cc8565b61074a9190610ce7565b6002600082825461075b9190610d09565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190610c90565b50604080518281524360208201526001600160a01b038416917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909101610577565b6000546001600160a01b031633146108465760405162461bcd60e51b815260040161021390610c2d565b6108506000610b0d565b565b6001600160a01b0381166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b828210156108d05783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061088a565b505050509050919050565b6127106108ea826104b0610cc8565b6108f49190610ce7565b600254116109445760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20496e73756666696369656e74205072697a652066756e646044820152606401610213565b33600090815260036020908152604080832081518083019092528482524382840190815281546001818101845592865293909420915160029093029091019182559151910155612710610999826104b0610cc8565b6109a39190610ce7565b600260008282546109b49190610d09565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190610c90565b506040805182815243602082015233917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a250565b6000546001600160a01b03163314610a9c5760405162461bcd60e51b815260040161021390610c2d565b6001600160a01b038116610b015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610213565b610b0a81610b0d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b6f57600080fd5b5035919050565b80356001600160a01b0381168114610b8d57600080fd5b919050565b60008060408385031215610ba557600080fd5b610bae83610b76565b946020939093013593505050565b600060208284031215610bce57600080fd5b610bd782610b76565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610c2057815180518552860151868501529284019290850190600101610bfb565b5091979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c8b57610c8b610c62565b500190565b600060208284031215610ca257600080fd5b81518015158114610bd757600080fd5b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610ce257610ce2610c62565b500290565b600082610d0457634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610d1b57610d1b610c62565b50039056fea26469706673582212200c45e2177f977185875a4ca579fffa15b588adf18a120666333824e3610fb93a64736f6c634300080c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c80638da5cb5b1161008c578063c07092d511610066578063c07092d5146101a4578063d37db1d2146101bb578063f2fde38b146101c3578063fc0c546a146101d657600080fd5b80638da5cb5b1461014c5780638da7ad2314610171578063a694fc3a1461019157600080fd5b80631d9ca881146100d457806321ce919d146100e95780632e17de78146101165780633ccfd60b14610129578063460b5ee214610131578063715018a614610144575b600080fd5b6100e76100e2366004610b5d565b6101e9565b005b6100fc6100f7366004610b92565b6102b3565b604080519283526020830191909152015b60405180910390f35b6100e7610124366004610b5d565b6102ef565b6100e7610583565b6100e761013f366004610b92565b6105ed565b6100e761081c565b6000546001600160a01b03165b6040516001600160a01b03909116815260200161010d565b61018461017f366004610bbc565b610852565b60405161010d9190610bde565b6100e761019f366004610b5d565b6108db565b6101ad60025481565b60405190815260200161010d565b6101ad606481565b6100e76101d1366004610bbc565b610a72565b600154610159906001600160a01b031681565b6000546001600160a01b0316331461021c5760405162461bcd60e51b815260040161021390610c2d565b60405180910390fd5b806002600082825461022e9190610c78565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064015b6020604051808303816000875af115801561028b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102af9190610c90565b5050565b600360205281600052604060002081815481106102cf57600080fd5b600091825260209091206002909102018054600190910154909250905082565b33600090815260036020526040812080548390811061031057610310610cb2565b9060005260206000209060020201600001541161036f5760405162461bcd60e51b815260206004820152601b60248201527f5374616b696e673a204e6f7468696e6720746f20756e7374616b6500000000006044820152606401610213565b4361037c60646003610cc8565b33600090815260036020526040902080548490811061039d5761039d610cb2565b9060005260206000209060020201600101546103b99190610c78565b11156104135760405162461bcd60e51b8152602060048201526024808201527f5374616b696e673a204c6f636b656420706572696f64206469646e27742070616044820152631cdcd95960e21b6064820152608401610213565b33600090815260036020526040812080548390811061043457610434610cb2565b60009182526020808320600290920290910154338352600390915260409091208054919250908390811061046a5761046a610cb2565b600091825260208220600290910201818155600190810191909155546001600160a01b031663a9059cbb336127106104a4856104b0610cc8565b6104ae9190610ce7565b6104b89085610c78565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610503573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105279190610c90565b50337f0f5bb82176feb1b5e747e28471aa92156a04d9f3ab9f45f28e2d704232b93f75612710610559846104b0610cc8565b6105639190610ce7565b61056d9084610c78565b6040519081526020015b60405180910390a25050565b6000546001600160a01b031633146105ad5760405162461bcd60e51b815260040161021390610c2d565b60028054600090915560015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb9060440161026c565b6000546001600160a01b031633146106175760405162461bcd60e51b815260040161021390610c2d565b612710610626826104b0610cc8565b6106309190610ce7565b600254116106805760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20496e73756666696369656e74205072697a652066756e646044820152606401610213565b6001600160a01b0382166106e25760405162461bcd60e51b815260206004820152602360248201527f5374616b696e673a205573657220616464726573732063616e2774206265207a60448201526265726f60e81b6064820152608401610213565b6001600160a01b038216600090815260036020908152604080832081518083019092528482524382840190815281546001818101845592865293909420915160029093029091019182559151910155612710610740826104b0610cc8565b61074a9190610ce7565b6002600082825461075b9190610d09565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af11580156107b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107db9190610c90565b50604080518281524360208201526001600160a01b038416917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee909101610577565b6000546001600160a01b031633146108465760405162461bcd60e51b815260040161021390610c2d565b6108506000610b0d565b565b6001600160a01b0381166000908152600360209081526040808320805482518185028101850190935280835260609492939192909184015b828210156108d05783829060005260206000209060020201604051806040016040529081600082015481526020016001820154815250508152602001906001019061088a565b505050509050919050565b6127106108ea826104b0610cc8565b6108f49190610ce7565b600254116109445760405162461bcd60e51b815260206004820181905260248201527f5374616b696e673a20496e73756666696369656e74205072697a652066756e646044820152606401610213565b33600090815260036020908152604080832081518083019092528482524382840190815281546001818101845592865293909420915160029093029091019182559151910155612710610999826104b0610cc8565b6109a39190610ce7565b600260008282546109b49190610d09565b90915550506001546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a349190610c90565b506040805182815243602082015233917f1449c6dd7851abc30abf37f57715f492010519147cc2652fbc38202c18a6ee90910160405180910390a250565b6000546001600160a01b03163314610a9c5760405162461bcd60e51b815260040161021390610c2d565b6001600160a01b038116610b015760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610213565b610b0a81610b0d565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610b6f57600080fd5b5035919050565b80356001600160a01b0381168114610b8d57600080fd5b919050565b60008060408385031215610ba557600080fd5b610bae83610b76565b946020939093013593505050565b600060208284031215610bce57600080fd5b610bd782610b76565b9392505050565b602080825282518282018190526000919060409081850190868401855b82811015610c2057815180518552860151868501529284019290850190600101610bfb565b5091979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60008219821115610c8b57610c8b610c62565b500190565b600060208284031215610ca257600080fd5b81518015158114610bd757600080fd5b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615610ce257610ce2610c62565b500290565b600082610d0457634e487b7160e01b600052601260045260246000fd5b500490565b600082821015610d1b57610d1b610c62565b50039056fea26469706673582212200c45e2177f977185875a4ca579fffa15b588adf18a120666333824e3610fb93a64736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Staking.sol:Staking",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 213,
        "contract": "contracts/Staking.sol:Staking",
        "label": "token",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)182"
      },
      {
        "astId": 220,
        "contract": "contracts/Staking.sol:Staking",
        "label": "availablePrizeFund",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 229,
        "contract": "contracts/Staking.sol:Staking",
        "label": "userInfo",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(UserInfo)218_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(UserInfo)218_storage)dyn_storage": {
        "base": "t_struct(UserInfo)218_storage",
        "encoding": "dynamic_array",
        "label": "struct Staking.UserInfo[]",
        "numberOfBytes": "32"
      },
      "t_contract(IERC20)182": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_struct(UserInfo)218_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Staking.UserInfo[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(UserInfo)218_storage)dyn_storage"
      },
      "t_struct(UserInfo)218_storage": {
        "encoding": "inplace",
        "label": "struct Staking.UserInfo",
        "members": [
          {
            "astId": 215,
            "contract": "contracts/Staking.sol:Staking",
            "label": "amount",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 217,
            "contract": "contracts/Staking.sol:Staking",
            "label": "startBlock",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}